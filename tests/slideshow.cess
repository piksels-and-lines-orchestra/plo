
class Slideshow():

    def __init__(self, slides, timing=1.0):
        """
        @slides: sequence of filenames to show
        @timing: number of seconds between each slide,
            or a sequence of times; one for each slide
        """

        self._timing = timing
        self._slide_images = [Image(f) for f in slides]
        self._accumulated_time = 0.0
        self._current_index = 0

    def _next_slide(self):
        # Just stop at last slide
        print 'next'
        if self._current_index < len(self._slide_images)-1:
            self._current_index += 1

    def _effective_timing(self):
        """Return the time that should be spent on the current slide"""

        try:
            iter(self._timing)
        except TypeError:
            return self._timing
        else:
            return self._timing[self._current_index]

    def draw(self, x, y):
        self._slide_images[self._current_index].draw(x, y)

    def nextTick(self):
        fps = 60.0 # FIXME: get from pycessing
        self._accumulated_time += 1.0/fps
        if self._accumulated_time >= self._effective_timing():
            self._next_slide()
            self._accumulated_time = 0.0        


l = ["/home/jon/figure_1.png",
    "/home/jon/gvncviewer.png",
    "/home/jon/mypaint-brushengine-opt.png",
]
slideshow = Slideshow(l)

def draw():
    slideshow.nextTick()
    slideshow.draw(10, 10)
